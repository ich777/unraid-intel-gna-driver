<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
  <!ENTITY name      "intel-gna-driver">
  <!ENTITY author    "ich777">
  <!ENTITY version   "2024.07.02">
  <!ENTITY gitURL    "https://github.com/&author;/unraid-&name;/raw/master">
  <!ENTITY pluginURL "&gitURL;/&name;.plg">
  <!ENTITY plugin    "/boot/config/plugins/&name;">
  <!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
  <!ENTITY packages  "/boot/config/plugins/&name;/packages">
]>

<PLUGIN  name="&name;" author="&author;" version="&version;" pluginURL="&pluginURL;" min="6.12.10" support="https://forums.unraid.net/topic/92865-support-ich777-amd-vendor-reset-coraltpu-hpsahba/">

<CHANGES>

###2024.07.02
- Initial release

</CHANGES>

<FILE Name="&emhttp;/README.md">
<INLINE>
**Intel Gaussian &amp; Neural Accelerator (GNA)**
  
The Intel Gaussian Neural Accelerator (GNA) is a specialized hardware accelerator integrated into Intel processors. It is designed to efficiently execute AI and machine learning tasks with low power consumption, particularly for speech and audio applications such as speech recognition and noise reduction.  
  
This plugin provides the necessary drivers to leverage the Intel GNA capabilities, enhancing performance for AI-driven audio processing tasks on supported Intel hardware.
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>

download() {
# Download Module Drivers
if wget -q -nc --show-progress --progress=bar:force:noscroll -O "&packages;/${KERNEL_V%%-*}/${LAT_PACKAGE}" "${DL_URL}/${LAT_PACKAGE}" ; then
  wget -q -nc --show-progress --progress=bar:force:noscroll -O "&packages;/${KERNEL_V%%-*}/${LAT_PACKAGE}.md5" "${DL_URL}/${LAT_PACKAGE}.md5"
  if [ "$(md5sum &packages;/${KERNEL_V%%-*}/${LAT_PACKAGE} | awk '{print $1}')" != "$(cat &packages;/${KERNEL_V%%-*}/${LAT_PACKAGE}.md5 | awk '{print $1}')" ]; then
    echo
    echo "---CHECKSUM ERROR!---"
    rm -rf &plugin; &emhttp;
    exit 1
  fi
  echo
  echo "----------Successfully downloaded Intel GNA Module Drivers-----------"
else
  echo
  echo "--------------Can't download Intel GNA Module Drivers----------------"
  rm -rf &plugin; &emhttp;
  exit 1
fi
}

check() {
if ! ls -1 &packages;/${KERNEL_V%%-*}/ | grep -q "${PACKAGE}" ; then
  LAT_PACKAGE="$(wget -qO- https://api.github.com/repos/ich777/unraid-intel-gna-driver/releases/tags/${KERNEL_V} | jq -r '.assets[].name' | grep "${PACKAGE}" | grep -E -v '\.md5$' | sort -V | tail -1)"
  echo
  echo "---------------Downloading Intel GNA Module Drivers!-----------------"
  echo "-----This could take some time, please don't close this window!------"
  download
else
  echo
  echo "---------------Intel GNA Module Drivers found locally----------------"
fi
}

install() {
# Install Module Drivers
/sbin/installpkg "&packages;/${KERNEL_V%%-*}/${PACKAGE}*.txz"
depmod -a
}

activate() {
# Modprobe modules
/sbin/modprobe intel_gna
}

# Define Variables
KERNEL_V="$(uname -r)"
PACKAGE="intel_gna_driver"
DL_URL="https://github.com/ich777/unraid-intel-gna-driver/releases/download/$KERNEL_V"

if [ ! -d "&packages;/${KERNEL_V%%-*}" ]; then
  mkdir -p "&packages;/${KERNEL_V%%-*}"
fi

#Check for old packages
rm -rf $(ls -d &packages;/* | grep -v "${KERNEL_V%%-*}")

#Check if Module Drivers are already downloaded
check

#Check if drivers are available or need to be installed
if ! modinfo intel_gna -0 >/dev/null 2>&amp;1 ; then
  install > /dev/null
fi

#Check if drivers are already loaded
if ! lsmod | grep "intel_gna" >/dev/null 2>&amp;1 ; then
  activate
fi

# Download logo
if [ ! -f "&plugin;/&name;.png" ]; then
  wget -q -nc --show-progress --progress=bar:force:noscroll -O "&plugin;/&name;.png" "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/intel-gna.png"
fi

#Install icon
if [ ! -f "&emhttp;/images/&name;.png" ]; then
  if [ ! -d "&emhttp;/images" ]; then
    mkdir -p &emhttp;/images
  fi
  cp &plugin;/&name;.png &emhttp;/images/
fi

#Check if Plugin Update Helper is downloaded and up-to-date
if [ ! -f &plugin;/plugin_update_helper ]; then
  wget -q -T 5 -O &plugin;/plugin_update_helper "https://raw.githubusercontent.com/ich777/unraid-plugin_update_helper/master/plugin_update_helper"
else
  CUR_V="$(grep -E "Plugin-Update-Helper version:" &plugin;/plugin_update_helper | awk '{print $4}')"
  if [ ! -s /tmp/update-helper ]; then
    echo "$(wget -T5 -qO- https://raw.githubusercontent.com/ich777/unraid-plugin_update_helper/master/plugin_update_helper | grep -E "Plugin-Update-Helper version:" | awk '{print $4}')" > /tmp/update-helper
    AVAIL_V="$(cat /tmp/update-helper)"
  else
    AVAIL_V="$(cat /tmp/update-helper)"
  fi
  if [ ! -z "$AVAIL_V" ]; then
    COMPARE="$(sort -V &lt;(echo -e "${AVAIL_V}\n$CUR_V") | tail -1)"
    if [ "$CUR_V" != "$COMPARE" ]; then
      wget -q -T 5 -O &plugin;/plugin_update_helper "https://raw.githubusercontent.com/ich777/unraid-plugin_update_helper/master/plugin_update_helper"
    fi
  fi
fi

#Check if Plugin Update Helper is installed and up to date
if [ ! -f /usr/bin/plugin_update_helper ]; then
  cp &plugin;/plugin_update_helper /usr/bin/plugin_update_helper
  chmod +x /usr/bin/plugin_update_helper
else
  PLUGIN_V="$(grep -E "Plugin-Update-Helper version:" &plugin;/plugin_update_helper | awk '{print $4}')"
  INST_V="$(grep -E "Plugin-Update-Helper version:" /usr/bin/plugin_update_helper | awk '{print $4}')"
  COMPARE="$(sort -V &lt;(echo -e "${PLUGIN_V}\n$INST_V") | tail -1)"
  if [ "$INST_V" != "$COMPARE" ]; then
    kill $(ps aux | grep -E "inotifywait -q /boot/changes.txt -e move_self,delete_self" | grep -v "grep -E inotifywait" | awk '{print $2}') 2>/dev/null
    sleep 1
    cp &plugin;/plugin_update_helper /usr/bin/plugin_update_helper
    chmod +x /usr/bin/plugin_update_helper
  fi
fi

#Start Plugin Update Helper
if [ -z "$(ps aux | grep -E "inotifywait -q /boot/changes.txt -e move_self,delete_self" | grep -v "grep -E inotifywait" | awk '{print $2}')" ]; then
  echo "/usr/bin/plugin_update_helper" | at now &gt; /dev/null 2&gt;&amp;1
fi


echo
echo "--------Installation of Intel GNA Module Drivers successful----------"
echo

</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>

echo "-------------------------------------------"
echo "---Uninstalling Intel GNA Module Drivers---"
echo "-------------------------------------------"
# Remove plugin related files
rm -rf &emhttp;
rm -rf &plugin;
echo
echo "----------------------------------------------------------------------"
echo "---Intel GNA Module Drivers uninstalled, please reboot your server!---"
echo "----------------------------------------------------------------------"
echo

</INLINE>
</FILE>
</PLUGIN>
